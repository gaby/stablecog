name: üí´ CI (Stablecog Website)

on:
  push:
    branches: [master]

concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_env:
    name: ‚öôÔ∏è Setup environment
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env property
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Put commit msg in environment
        run: echo "COMMIT_MSG=${{ github.event.head_commit.message }}" >> $GITHUB_ENV

      - name: Escape commit message
        run: |
          echo "COMMIT_MSG=$(echo $COMMIT_MSG | tr -d '\"')" >> $GITHUB_ENV

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Debug Outputs
        run: |
          echo "BRANCH_NAME=${{ env.BRANCH_NAME }}"
          echo "SHORT_SHA=${{ env.SHORT_SHA }}"

    outputs:
      short_sha: ${{ env.SHORT_SHA }}
      commit_msg: ${{ env.COMMIT_MSG }}
      branch_name: ${{ env.BRANCH_NAME }}

  build_amd64:
    name: üî® Build Docker Image (amd64)
    runs-on: warp-ubuntu-latest-x64-8x
    needs: setup_env
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push amd64 image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          file: ./Dockerfile
          tags: stablecog/sc-web:${{ needs.setup_env.outputs.branch_name }}-${{ needs.setup_env.outputs.short_sha }}-amd64

  build_arm64:
    name: üî® Build Docker Image (arm64)
    runs-on: warp-ubuntu-latest-arm64-8x
    needs: setup_env
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push arm64 image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/arm64
          push: true
          file: ./Dockerfile
          tags: stablecog/sc-web:${{ needs.setup_env.outputs.branch_name }}-${{ needs.setup_env.outputs.short_sha }}-arm64

  push_manifest:
    name: üè∑Ô∏è Push Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs:
      - build_amd64
      - build_arm64

    steps:
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push multi-arch manifest
        run: |
          BRANCH_NAME=${{ needs.setup_env.outputs.branch_name }}
          SHORT_SHA=${{ needs.setup_env.outputs.short_sha }}
          if [ -z "$BRANCH_NAME" ] || [ -z "$SHORT_SHA" ]; then
            echo "Error: BRANCH_NAME or SHORT_SHA is not set"
            exit 1
          fi

          docker manifest create stablecog/sc-web:$BRANCH_NAME-$SHORT_SHA \
            --amend stablecog/sc-web:$BRANCH_NAME-$SHORT_SHA-amd64 \
            --amend stablecog/sc-web:$BRANCH_NAME-$SHORT_SHA-arm64
          docker manifest push stablecog/sc-web:$BRANCH_NAME-$SHORT_SHA

      - name: Tag and push 'latest'
        run: |
          BRANCH_NAME=${{ needs.setup_env.outputs.branch_name }}
          SHORT_SHA=${{ needs.setup_env.outputs.short_sha }}
          docker manifest create stablecog/sc-web:latest \
            --amend stablecog/sc-web:$BRANCH_NAME-$SHORT_SHA-amd64 \
            --amend stablecog/sc-web:$BRANCH_NAME-$SHORT_SHA-arm64
          docker manifest push stablecog/sc-web:latest
